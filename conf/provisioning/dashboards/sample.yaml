# # config file version
apiVersion: 1

#providers:
# - name: 'default'
#   orgId: 1
#   folder: ''
#   folderUid: ''
#   type: file
#   options:
#     path: /var/lib/grafana/dashboards
# ---
# # config file version
# Configuration file version
apiVersion: 1

# # List of data sources to delete from the database.
# deleteDatasources:
#   - name: Graphite
#     orgId: 1

# # List of data sources to insert/update depending on what's
# # available in the database.
# datasources:
#   # <string, required> Sets the name you use to refer to
#   # the data source in panels and queries.
#   - name: Graphite
#     # <string, required> Sets the data source type.
#     type: graphite
#     # <string, required> Sets the access mode, either
#     # proxy or direct (Server or Browser in the UI).
#     # Some data sources are incompatible with any setting
#     # but proxy (Server).
#     access: proxy
#     # <int> Sets the organization id. Defaults to orgId 1.
#     orgId: 1
#     # <string> Sets a custom UID to reference this
#     # data source in other parts of the configuration.
#     # If not specified, Grafana generates one.
#     uid: my_unique_uid
#     # <string> Sets the data source's URL, including the
#     # port.
#     url: http://localhost:8080
#     # <string> Sets the database user, if necessary.
#     user:
#     # <string> Sets the database name, if necessary.
#     database:
#     # <bool> Enables basic authorization.
#     basicAuth:
#     # <string> Sets the basic authorization username.
#     basicAuthUser:
#     # <bool> Enables credential headers.
#     withCredentials:
#     # <bool> Toggles whether the data source is pre-selected
#     # for new panels. You can set only one default
#     # data source per organization.
#     isDefault:
#     # <map> Fields to convert to JSON and store in jsonData.
#     jsonData:
#       # <string> Defines the Graphite service's version.
#       graphiteVersion: '1.1'
#       # <bool> Enables TLS authentication using a client
#       # certificate configured in secureJsonData.
#       tlsAuth: true
#       # <bool> Enables TLS authentication using a CA
#       # certificate.
#       tlsAuthWithCACert: true
#     # <map> Fields to encrypt before storing in jsonData.
#     secureJsonData:
#       # <string> Defines the CA cert, client cert, and
#       # client key for encrypted authentication.
#       tlsCACert: '...'
#       tlsClientCert: '...'
#       tlsClientKey: '...'
#       # <string> Sets the database password, if necessary.
#       password:
#       # <string> Sets the basic authorization password.
#       basicAuthPassword:
#     # <int> Sets the version. Used to compare versions when
#     # updating. Ignored when creating a new data source.
#     version: 1
#     # <bool> Allows users to edit data sources from the
#     # Grafana UI.
# apiVersion: 2

# # <list> list of roles to insert/update/delete
# roles:
#   # <string, required> name of the role you want to create or update. Required.
#   - name: 'custom:users:writer'
#     # <string> uid of the role. Has to be unique for all orgs.
#     uid: customuserswriter1
#     # <string> description of the role, informative purpose only.
#     description: 'Create, read, write users'
#     # <int> version of the role, Grafana will update the role when increased.
#     version: 2
#     # <int> org id. Defaults to Grafana's default if not specified.
#     orgId: 1
#     # <list> list of the permissions granted by this role.
#     permissions:
#       # <string, required> action allowed.
#       - action: 'users:read'
#         #<string> scope it applies to.
#         scope: 'global.users:*'
#       - action: 'users:write'
#         scope: 'global.users:*'
#       - action: 'users:create'
#   - name: 'custom:global:users:reader'
#     # <bool> overwrite org id and creates a global role.
#     global: true
#     # <string> state of the role. Defaults to 'present'. If 'absent', role will be deleted.
#     state: 'absent'
#     # <bool> force deletion revoking all grants of the role.
#     force: true
#   - uid: 'basic_editor'
#     version: 2
#     global: true
#     # <list> list of roles to copy permissions from.
#     from:
#       - uid: 'basic_editor'
#         global: true
#       - name: 'fixed:users:writer'
#         global: true
#     # <list> list of the permissions to add/remove on top of the copied ones.
#     permissions:
#       - action: 'users:read'
#         scope: 'global.users:*'
#       - action: 'users:write'
#         scope: 'global.users:*'
#         # <string> state of the permission. Defaults to 'present'. If 'absent', the permission will be removed.
#         state: absent

# # <list> list role assignments to teams to create or remove.
# teams:
#   # <string, required> name of the team you want to assign roles to. Required.
#   - name: 'Users writers'
#     # <int> org id. Will default to Grafana's default if not specified.
#     orgId: 1
#     # <list> list of roles to assign to the team
#     roles:
#       # <string> uid of the role you want to assign to the team.
#       - uid: 'customuserswriter1'
#         # <int> org id. Will default to Grafana's default if not specified.
#         orgId: 1
#       # <string> name of the role you want to assign to the team.
#       - name: 'fixed:users:writer'
#         # <bool> overwrite org id to specify the role is global.
#         global: true
#         # <string> state of the assignment. Defaults to 'present'. If 'absent', the assignment will be revoked.
#         state: absent
